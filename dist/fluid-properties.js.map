{"version":3,"file":"fluid-properties.js","sources":["../src/data/constants.js","../src/eos/getEOSParameters.js","../src/eos/eosParameters.js","../src/eos/phase.js","../src/eos/getEOS.js","../src/data/molecules.js","../src/molecularFluid/from/handleError.js","../src/molecularFluid/from/molecularFluidFromFormula.js","../src/molecularFluid/from/molecularFluidFromName.js","../src/molecularFluid/molecularFluid.js"],"sourcesContent":["export const R = 8.314e-5; // ideal gas constant\n","import { R } from '../data/constants.js';\n\nexport function getVDWParameters(molecularFluid) {\n  const parameters = {\n    a:\n      (0.421875 * R ** 2 * molecularFluid.criticalTemperature ** 2) /\n      molecularFluid.criticalPressure,\n    b: (0.125 * R * molecularFluid.tc) / molecularFluid.pc,\n    S: null,\n    k: 1,\n    u: 1,\n    w: 0,\n  };\n  return parameters;\n}\n\nexport function getRKParameters(molecularFluid, temperature) {\n  const parameters = {\n    a:\n      (0.42748 * R ** 2 * molecularFluid.criticalTemperature ** 2) /\n      molecularFluid.criticalPressure /\n      Math.sqrt(temperature / molecularFluid.criticalTemperature),\n    b:\n      (0.08664 * R * molecularFluid.criticalTemperature) /\n      molecularFluid.criticalPressure,\n    S: null,\n    k: 1,\n    u: 1,\n    w: 0,\n  };\n  return parameters;\n}\n\nexport function getRKSParameters(molecularFluid, temperature) {\n  const s =\n    0.48 +\n    1.574 * molecularFluid.accentricFactor -\n    0.176 * molecularFluid.accentricFactor ** 2;\n  const parameters = {\n    a:\n      (0.42748 * R ** 2 * molecularFluid.criticalTemperature ** 2) /\n      molecularFluid.criticalPressure,\n    b:\n      (0.08664 * R * molecularFluid.criticalTemperature) /\n      molecularFluid.criticalPressure,\n    S: s,\n    k:\n      (1 +\n        s *\n          (1 - Math.sqrt(temperature / molecularFluid.criticalTemperature))) **\n      2,\n    u: 1,\n    w: 0,\n  };\n  return parameters;\n}\n\nexport function getPRParameters(molecularFluid, temperature) {\n  const s =\n    0.37464 +\n    1.54226 * molecularFluid.accentricFactor -\n    0.26992 * molecularFluid.accentricFactor ** 2;\n  const parameters = {\n    a:\n      (0.45724 * R ** 2 * molecularFluid.criticalTemperature ** 2) /\n      molecularFluid.criticalPressure,\n    b:\n      (0.0778 * R * molecularFluid.criticalTemperature) /\n      molecularFluid.criticalPressure,\n    S: s,\n    k:\n      (1 +\n        s *\n          (1 - Math.sqrt(temperature / molecularFluid.criticalTemperature))) **\n      2,\n    u: 2,\n    w: -1,\n  };\n  return parameters;\n}\n","import {\n  getVDWParameters,\n  getPRParameters,\n  getRKParameters,\n  getRKSParameters,\n} from './getEOSParameters.js';\n\n/**\n * Stores the parametrization of EOS\n *\n * @export\n * @class EOSParameters\n */\nexport class EOSParameters {\n  /**\n   *Creates an instance of EOSParameters.\n   * @param {MolecularFluid} molecularFluid instance of the MolecularFluid class\n   * @param {Object} [options={}]\n   * @param {Number} options.temperature temperature in K. Defaults to 298.\n   * @param {String} options.eos Type of the equation of states (EOS). Available options: pr (Peng-Robinson), vdw (Van der Waals), rk (Redlich窶適wong), rks (Redlich窶適wong-Soave). Defaults to pr.\n   * @memberof EOSParameters\n   */\n  constructor(molecularFluid, options = {}) {\n    let { temperature = 298, eos = 'pr' } = options;\n    this.eos = eos;\n    this.temperature = temperature;\n    this.A = null;\n    this.B = null;\n    this.alpha = null;\n    this.beta = null;\n    this.gamma = null;\n    this.p = null;\n    this.q = null;\n    this.Delta = null;\n    let parameters;\n\n    switch (eos) {\n      case 'vdw':\n        parameters = getVDWParameters(molecularFluid);\n        break;\n      case 'pr':\n        parameters = getPRParameters(molecularFluid, temperature);\n        break;\n      case 'rk':\n        parameters = getRKParameters(molecularFluid, temperature);\n        break;\n      case 'rks':\n        parameters = getRKSParameters(molecularFluid, temperature);\n        break;\n      default:\n        throw new Error('Unkown EOS type');\n    }\n\n    this.a = parameters.a;\n    this.b = parameters.b;\n    this.S = parameters.S;\n    this.k = parameters.k;\n    this.u = parameters.u;\n    this.w = parameters.w;\n  }\n}\n","/**\n * Based on comparing the parameters to the critical constants\n * return which phase the system is in\n *\n * @export\n * @param {MolecularFluid} molecularFluid instance of the MolecularFluid class\n * @param {Number} temperature in K\n * @param {Numnber} pressure in bar\n * @param {Number} volumen in L\n * @returns {String} \"supercritial\", \"gas\", or \"liquid\" or null\n */\nexport function getPhase(molecularFluid, temperature, pressure, volume) {\n  let phase = null;\n  if (\n    (temperature > molecularFluid.criticalTemperature) &\n    (pressure > molecularFluid.criticalPressure)\n  ) {\n    phase = 'supercritical';\n  } else {\n    if (molecularFluid.criticalVolume) {\n      if (volume > molecularFluid.criticalVolume) phase = 'gas';\n    } else {\n      phase = 'liquid';\n    }\n  }\n  return phase;\n}\n\n/**\n * Comparing an array of fugacities to find out in which\n * state the system is\n * @export\n * @param {Array<number>} phis An array of fugacities\n * @returns {Number} Index of the state the system is in\n */\nexport function getPhasefromPhi(phis) {\n  if (phis.length === 1) {\n    return 0;\n  } else {\n    if (phis[1] < phis[0]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n","import { R } from '../data/constants.js';\n\nimport { EOSParameters } from './eosParameters';\nimport { getPhasefromPhi } from './phase.js';\n\n/**\n * Based on a MolecularFluid, temperature, and pressure or volume and\n * the choice of equation of state (EOS) return the thermodynamic properties\n * of the system\n *\n * @export\n * @param {MolecularFluid} molecularFluid instance of the MolecularFluid class\n * @param {Number} temperature in Kelvin\n * @param {Object} [options={}]\n * @param {Number} options.pressure in bar\n * @param {Number} options.volume in L\n * @param {String} otpions.eos Type of the equation of states (EOS). Available options: pr (Peng-Robinson), vdw (Van der Waals), rk (Redlich窶適wong), rks (Redlich窶適wong-Soave). Defaults to pr.\n * @returns {Object}\n */\nexport function getProperties(molecularFluid, temperature, options = {}) {\n  let { pressure = 1, volume = null, eos = 'pr' } = options;\n  validateInput(pressure, volume);\n\n  let eosParameters = new EOSParameters(molecularFluid, temperature, {\n    eos: eos,\n  });\n\n  eosParameters.relativeTemperature =\n    temperature / molecularFluid.criticalTemperature;\n\n  if (Number.isFinite(volume) & !Number.isFinite(pressure)) {\n    pressure = getPressure(eosParameters, temperature, volume);\n  }\n\n  updateEOSParameters(eosParameters, pressure, temperature);\n\n  let zList = solveZ(eosParameters);\n  let phaseProperties = getThermodynamicProperties(\n    zList,\n    eosParameters,\n    eos,\n    molecularFluid,\n    pressure,\n    temperature,\n  );\n  let phis = [];\n  phaseProperties.forEach((properties) => {\n    phis.push(properties.fugacityCoefficient);\n  });\n\n  return {\n    temperature: temperature,\n    pressure: pressure,\n    phaseProperties: phaseProperties,\n    zList: zList,\n    inPhase: getPhasefromPhi(phis),\n  };\n}\n\nfunction validateInput(volume, pressure) {\n  if (Number.isFinite(volume) & Number.isFinite(pressure)) {\n    throw new Error('You need to specify pressure OR volume, not both!');\n  }\n\n  if (!Number.isFinite(volume) & !Number.isFinite(pressure)) {\n    throw new Error('You need to specify pressure or volume!');\n  }\n}\n\nfunction getPressure(eosParameters, temperature, volume) {\n  return (\n    (R * temperature) / (volume - eosParameters.b) -\n    eosParameters.a /\n      (volume ** 2 +\n        eosParameters.u * eosParameters.b * volume +\n        eosParameters.w * eosParameters.b ** 2)\n  );\n}\n\nfunction updateEOSParameters(eosParameters, pressure, temperature) {\n  eosParameters.A =\n    (eosParameters.a * eosParameters.k * pressure) / R ** 2 / temperature ** 2;\n  eosParameters.B = (eosParameters.b * pressure) / R / temperature;\n\n  eosParameters.alpha =\n    -1 - eosParameters.B + eosParameters.u * eosParameters.B;\n  eosParameters.beta =\n    eosParameters.A +\n    eosParameters.w * eosParameters.B ** 2 -\n    eosParameters.u * eosParameters.B -\n    eosParameters.u * eosParameters.B ** 2;\n  eosParameters.gamma =\n    -eosParameters.A * eosParameters.B -\n    eosParameters.w * eosParameters.B ** 2 -\n    eosParameters.w * eosParameters.B ** 3;\n\n  eosParameters.p = eosParameters.beta - eosParameters.alpha ** 2 / 3;\n  eosParameters.q =\n    (2 * eosParameters.alpha ** 3) / 27 -\n    (eosParameters.alpha * eosParameters.beta) / 3 +\n    eosParameters.gamma;\n  eosParameters.Delta = eosParameters.q ** 2 / 4 + eosParameters.p ** 3 / 27;\n}\n\n/**\n *Some background here https://pubs.acs.org/doi/pdf/10.1021/ie2023004\n *\n */\nfunction solveZ(eosParameters) {\n  // Cardano solution formula\n  let zList = [];\n  if (eosParameters.Delta > 0) {\n    zList = solveCardano(eosParameters);\n  } else {\n    zList = solveTrigonometric(eosParameters);\n  }\n  return zList;\n}\n\nfunction solveCardano(eosParameters) {\n  let xSol;\n  let zList = [];\n  xSol =\n    Math.cbrt(-eosParameters.q / 2 + Math.sqrt(eosParameters.Delta)) +\n    Math.cbrt(-eosParameters.q / 2 - Math.sqrt(eosParameters.Delta));\n  zList = [xSol - eosParameters.alpha / 3];\n  return zList;\n}\n\nfunction solveTrigonometric(eosParameters) {\n  let xSol;\n  let zList = [];\n\n  let subeq = Math.acos(\n    ((3 * eosParameters.q) / 2 / eosParameters.p) *\n      Math.sqrt(-3 / eosParameters.p),\n  );\n\n  for (let offset = 0; offset < 3; offset++) {\n    xSol =\n      2 *\n      Math.sqrt(-eosParameters.p / 3) *\n      Math.cos(subeq / 3 - (2 * Math.PI * offset) / 3);\n    zList.push(xSol - eosParameters.alpha / 3);\n  }\n  zList.sort(); // [ z_liq, z_meaningless, z_vap ]\n  //remove the meaningless value\n  zList.splice(1, 1);\n  return zList;\n}\n\nfunction getThermodynamicProperties(\n  zList,\n  eosParameters,\n  eos,\n  molecularFluid,\n  pressure,\n  temperature,\n) {\n  let phaseProperties = [];\n  switch (eos) {\n    case 'pr':\n      zList.forEach((z) => {\n        phaseProperties.push(\n          getThermodynamicPropertiesPR(\n            z,\n            eosParameters,\n            molecularFluid,\n            pressure,\n            temperature,\n          ),\n        );\n      });\n      break;\n    default:\n      throw new Error('Only supported EOS are VDW and PR.');\n  }\n  return phaseProperties;\n}\n\nfunction getThermodynamicPropertiesPR(\n  z,\n  eosParameters,\n  molecularFluid,\n  pressure,\n  temperature,\n) {\n  const ecap =\n    eosParameters.S *\n    Math.sqrt(eosParameters.relativeTemperature / eosParameters.k);\n  const subeq1 = eosParameters.A / 2 / Math.sqrt(2) / eosParameters.B;\n\n  const subeq2 = Math.log(\n    (z + eosParameters.B * (1 + Math.sqrt(2))) /\n      (z + eosParameters.B * (1 - Math.sqrt(2))),\n  );\n  const residualEnthalpy = z - 1 - subeq1 * (1 + ecap) * subeq2;\n  const residualEntropy =\n    Math.log(z - eosParameters.B) - subeq1 * ecap * subeq2;\n\n  const { gibbs, fugacityCoefficient } = computeGibbsFugacity(\n    residualEnthalpy,\n    residualEntropy,\n  );\n  const molarDensity = computeMolarDensity(pressure, temperature, z);\n  return {\n    fugacityCoefficient: fugacityCoefficient,\n    fugacity: fugacityCoefficient * pressure,\n    residualEnthalpy: residualEnthalpy,\n    residualEntropy: residualEntropy,\n    residualGibbsEnergy: gibbs,\n    compressibilityFactor: z,\n    molarDensity: molarDensity,\n    density: computeDensity(molarDensity, molecularFluid),\n  };\n}\n\nfunction computeGibbsFugacity(enthalpy, entropy) {\n  const gibbs = enthalpy - entropy;\n  const fugacityCoefficient = Math.exp(gibbs);\n  return { gibbs, fugacityCoefficient };\n}\n\nfunction computeMolarDensity(pressure, temperature, compressibilityFactor) {\n  return pressure / (R * 1000 * temperature * compressibilityFactor);\n}\n\nfunction computeDensity(molarDensity, molecularFluid) {\n  return (molarDensity * molecularFluid.molarMass) / 1000;\n}\n","export default [\n  {\n    name: 'methane',\n    formula: 'CH4',\n    criticalTemperature: 190.56,\n    criticalPressure: 45.99,\n    accentricFactor: 0.012,\n    molarMass: 16.042504,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'ethane',\n    formula: 'C2H6',\n    criticalTemperature: 305.32,\n    criticalPressure: 48.72,\n    accentricFactor: 0.1,\n    molarMass: 30.069126,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'propane',\n    formula: 'C3H8',\n    criticalTemperature: 369.83,\n    criticalPressure: 42.48,\n    accentricFactor: 0.369,\n    molarMass: 44.095748,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'butane',\n    formula: 'C4H',\n    criticalTemperature: 425.12,\n    criticalPressure: 37.96,\n    accentricFactor: 0.2,\n    molarMass: 49.050901,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: '1-hexene',\n    formula: 'C6H12',\n    criticalTemperature: 504.0,\n    criticalPressure: 32.1,\n    accentricFactor: 0.28600000000000003,\n    molarMass: 84.159732,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'hexane',\n    formula: 'C6H14',\n    criticalTemperature: 507.6,\n    criticalPressure: 30.25,\n    accentricFactor: 0.301,\n    molarMass: 86.17561400000001,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'n-octane',\n    formula: 'C8H18',\n    criticalTemperature: 569.4,\n    criticalPressure: 24.97,\n    accentricFactor: 0.39799999999999996,\n    molarMass: 114.228858,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'water',\n    formula: 'H2O',\n    criticalTemperature: 647.13,\n    criticalPressure: 220.55,\n    accentricFactor: 0.3449,\n    molarMass: 18.015287,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'nitrogen',\n    formula: 'N2',\n    criticalTemperature: 126.2,\n    criticalPressure: 34.6,\n    accentricFactor: 0.0377,\n    molarMass: 28.013406,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'helium',\n    formula: 'He',\n    criticalTemperature: 5.2,\n    criticalPressure: 2.28,\n    accentricFactor: 0.0,\n    molarMass: 4.002602,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'neon',\n    formula: 'Ne',\n    criticalTemperature: 44.4,\n    criticalPressure: 26.53,\n    accentricFactor: 0.0,\n    molarMass: 20.1797,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'argon',\n    formula: 'Ar',\n    criticalTemperature: 150.86,\n    criticalPressure: 48.98,\n    accentricFactor: 0.0,\n    molarMass: 39.948,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'krypton',\n    formula: 'Kr',\n    criticalTemperature: 209.35,\n    criticalPressure: 55.02,\n    accentricFactor: 0.0,\n    molarMass: 83.798,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'xenon',\n    formula: 'Xe',\n    criticalTemperature: 289.74,\n    criticalPressure: 58.4,\n    accentricFactor: 0.0,\n    molarMass: 131.293,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n  {\n    name: 'radon',\n    formula: 'Rn',\n    criticalTemperature: 377.0,\n    criticalPressure: 62.8,\n    accentricFactor: 0.0,\n    molarMass: 222.0176,\n    reference: {\n      citation:\n        'Yaws, Carl L. Thermophysical Properties of Chemicals and Hydrocarbons. 2nd ed. Austin, TX: Gulf Publishing Company, 2014. Print.',\n      isbn: '978-0-323-28659-6',\n    },\n  },\n];\n","export function handleError(thisMol) {\n  if (thisMol.length === 1) {\n    return thisMol[0];\n  } else if (thisMol.length === 0) {\n    throw new Error('No match with database.');\n  } else {\n    throw new Error('Result not unique!');\n  }\n}\n","import moleculeProperties from '../../data/molecules';\nimport { MolecularFluid } from '../molecularFluid.js';\n\nimport { handleError } from './handleError.js';\n\nexport function molecularFluidFromFormula(molFormula) {\n  let thisMol = moleculeProperties.filter((dict) => {\n    return dict.formula === molFormula;\n  });\n\n  thisMol = handleError(thisMol);\n  return new MolecularFluid(\n    thisMol.molarMass,\n    thisMol.criticalTemperature,\n    thisMol.criticalPressure,\n    thisMol.accentricFactor,\n  );\n}\n","import moleculeProperties from '../../data/molecules';\nimport { MolecularFluid } from '../molecularFluid.js';\n\nimport { handleError } from './handleError.js';\n\nexport function molecularFluidFromName(molName) {\n  let thisMol = moleculeProperties.filter((dict) => {\n    return dict.name === molName;\n  });\n\n  thisMol = handleError(thisMol);\n  return new MolecularFluid(\n    thisMol.molarMass,\n    thisMol.criticalTemperature,\n    thisMol.criticalPressure,\n    thisMol.accentricFactor,\n  );\n}\n","import { molecularFluidFromFormula } from './from/molecularFluidFromFormula.js';\nimport { molecularFluidFromName } from './from/molecularFluidFromName.js';\n\n/**\n * This class stores properties of molecules\n *\n * @export\n * @class MolecularFluid\n */\nexport class MolecularFluid {\n  /**\n   *Creates an instance of MolecularFluid.\n   * @param {Number} molarMass in g/mol\n   * @param {Number} criticalTemperature in K\n   * @param {Number} criticalPressure in bar\n   * @param {Number} accentricFactor\n   * @memberof MolecularFluid\n   */\n  constructor(\n    molarMass,\n    criticalTemperature,\n    criticalPressure,\n    accentricFactor,\n  ) {\n    this.molarMass = molarMass;\n    this.criticalTemperature = criticalTemperature;\n    this.criticalPressure = criticalPressure;\n    this.accentricFactor = accentricFactor;\n  }\n}\n\nMolecularFluid.fromName = molecularFluidFromName;\nMolecularFluid.fromFormula = molecularFluidFromFormula;\n"],"names":["R","getVDWParameters","molecularFluid","parameters","a","criticalTemperature","criticalPressure","b","tc","pc","S","k","u","w","getRKParameters","temperature","Math","sqrt","getRKSParameters","s","accentricFactor","getPRParameters","EOSParameters","constructor","options","eos","A","B","alpha","beta","gamma","p","q","Delta","Error","getPhasefromPhi","phis","length","getProperties","pressure","volume","validateInput","eosParameters","relativeTemperature","Number","isFinite","getPressure","updateEOSParameters","zList","solveZ","phaseProperties","getThermodynamicProperties","forEach","properties","push","fugacityCoefficient","inPhase","solveCardano","solveTrigonometric","xSol","cbrt","subeq","acos","offset","cos","PI","sort","splice","z","getThermodynamicPropertiesPR","ecap","subeq1","subeq2","log","residualEnthalpy","residualEntropy","gibbs","computeGibbsFugacity","molarDensity","computeMolarDensity","fugacity","residualGibbsEnergy","compressibilityFactor","density","computeDensity","enthalpy","entropy","exp","molarMass","name","formula","reference","citation","isbn","handleError","thisMol","molecularFluidFromFormula","molFormula","moleculeProperties","filter","dict","MolecularFluid","molecularFluidFromName","molName","fromName","fromFormula"],"mappings":"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"}